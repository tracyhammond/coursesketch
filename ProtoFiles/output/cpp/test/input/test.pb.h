// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: input/test.proto

#ifndef PROTOBUF_input_2ftest_2eproto__INCLUDED
#define PROTOBUF_input_2ftest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_input_2ftest_2eproto();
void protobuf_AssignDesc_input_2ftest_2eproto();
void protobuf_ShutdownFile_input_2ftest_2eproto();

class Outer;
class Inner;

// ===================================================================

class Outer : public ::google::protobuf::Message {
 public:
  Outer();
  virtual ~Outer();

  Outer(const Outer& from);

  inline Outer& operator=(const Outer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Outer& default_instance();

  void Swap(Outer* other);

  // implements Message ----------------------------------------------

  Outer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Outer& from);
  void MergeFrom(const Outer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.Inner inners = 4;
  inline int inners_size() const;
  inline void clear_inners();
  static const int kInnersFieldNumber = 4;
  inline const ::protobuf::Inner& inners(int index) const;
  inline ::protobuf::Inner* mutable_inners(int index);
  inline ::protobuf::Inner* add_inners();
  inline const ::google::protobuf::RepeatedPtrField< ::protobuf::Inner >&
      inners() const;
  inline ::google::protobuf::RepeatedPtrField< ::protobuf::Inner >*
      mutable_inners();

  // @@protoc_insertion_point(class_scope:protobuf.Outer)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protobuf::Inner > inners_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_input_2ftest_2eproto();
  friend void protobuf_AssignDesc_input_2ftest_2eproto();
  friend void protobuf_ShutdownFile_input_2ftest_2eproto();

  void InitAsDefaultInstance();
  static Outer* default_instance_;
};
// -------------------------------------------------------------------

class Inner : public ::google::protobuf::Message {
 public:
  Inner();
  virtual ~Inner();

  Inner(const Inner& from);

  inline Inner& operator=(const Inner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Inner& default_instance();

  void Swap(Inner* other);

  // implements Message ----------------------------------------------

  Inner* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Inner& from);
  void MergeFrom(const Inner& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string str = 1;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 1;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:protobuf.Inner)
 private:
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_input_2ftest_2eproto();
  friend void protobuf_AssignDesc_input_2ftest_2eproto();
  friend void protobuf_ShutdownFile_input_2ftest_2eproto();

  void InitAsDefaultInstance();
  static Inner* default_instance_;
};
// ===================================================================


// ===================================================================

// Outer

// repeated .protobuf.Inner inners = 4;
inline int Outer::inners_size() const {
  return inners_.size();
}
inline void Outer::clear_inners() {
  inners_.Clear();
}
inline const ::protobuf::Inner& Outer::inners(int index) const {
  return inners_.Get(index);
}
inline ::protobuf::Inner* Outer::mutable_inners(int index) {
  return inners_.Mutable(index);
}
inline ::protobuf::Inner* Outer::add_inners() {
  return inners_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::Inner >&
Outer::inners() const {
  return inners_;
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::Inner >*
Outer::mutable_inners() {
  return &inners_;
}

// -------------------------------------------------------------------

// Inner

// required string str = 1;
inline bool Inner::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Inner::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Inner::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Inner::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& Inner::str() const {
  return *str_;
}
inline void Inner::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void Inner::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void Inner::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Inner::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* Inner::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Inner::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_input_2ftest_2eproto__INCLUDED
