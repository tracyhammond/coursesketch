package protobuf.srl.request;

option java_generic_services = true;

// Always sent and is filled out properly.
message Request {
    required MessageType requestType = 1 [default=LOGIN];
    /**
     * This is ued to uniquely identify a request accross a single session.
     * Request from different sessions are expected to be repeated.
     */
    required string requestId = 2;
    optional bytes otherData = 3;
    optional string responseText = 4;
    optional string sessionInfo = 5; // This may be separated out more.
    optional string serversideId = 6;
    optional int64 messageTime = 7; // this is the time that the message is received by the server

    enum MessageType {
        LOGIN = 0;
        DATA_REQUEST = 1;
        DATA_INSERT = 2;
        DATA_UPDATE = 3;
        DATA_REMOVE = 4;
        RECOGNITION = 5;
        LOADING = 6; // this is for when the client is loading.
        SUBMISSION = 7; // sent to just the answer checker server (Answer checking)
        FEEDBACK = 8; // answer checking feedback!
        CLOSE = 9; // sent to tell the server to close the connection rs
        ERROR = 10;
        TIME = 11; // used for sycnrhonizing the time between the servers.
    }
}

message LoginInformation {
    required string username = 1;
    optional string password = 2;
    optional bool isLoggedIn = 3;
    optional bool isInstructor = 4;
    optional bool isRegistering = 5;
    optional string email = 6;
    optional string userId = 7;
}

/**
 * Creates a protobuf object that inherits the properties of an exception.
 */
message ProtoException {
    required string mssg = 1; // the message that the exception has.
    repeated string stackTrace = 2; // the stacktrace of the exception.
    optional string exceptionType = 3; // this will be the class name in java.
    optional ProtoException cause = 4; // the stackTrace might have a cause that is another protoException.
}

service RequestService {
    rpc sendMessage(Request) returns (Request);
}
