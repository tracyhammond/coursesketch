syntax = "proto3";

import "google/protobuf/timestamp.proto";

package protobuf.srl.utils;

message DateTime {
    // Needs to be implemented with enums. Probably already exists elsewhere.
    int32 year = 1;
    int32 month = 2;
    int32 day = 3;
    int32 hour = 4;
    int32 minute = 5;
    int32 second = 6;
    uint64 millisecond = 7; // To ensure capabilities to communicate with systems with diverse date-time handling methods
    google.protobuf.Timestamp timestamp = 8;
}

/**
 * Also can be called SrlUserGroup
 */
message SrlPermission {
    repeated string adminPermission = 1;
    repeated string moderatorPermission = 2;
    repeated string userPermission = 3;
}

/**
 * The checksum contains 4 sets of longs
 */
message SrlChecksum {
    int64 firstBits = 1; // size and id of each command
    int64 secondBits = 2; // summation of times
}

/**
 * Contains the type of questions that course sketch supports.
 * (This should only be what is currently supported)
 */
enum QuestionType {
    SKETCH = 0; // sketching
    MULT_CHOICE = 1;
    FREE_RESP = 2; // typing
    CHECK_BOX = 3;
}

/**
 * How accessible are items in course sketch
 */
enum Accessibility {
    SUPER_PUBLIC = 0; // no registration check is needed for this course.  (you do still have to register)
    PUBLIC = 1; //Any student can access course without approval.
    PROTECTED = 2; //Any student can request access for course and public information it is searchable, requires instructor approval
    PROTECTED_NOSEARCH = 3; //No students can see course without a special link, it is not searchable, requires instructor approval
    PRIVATE = 4; //No students can see course without instructor invitation, invitation only
}

/**
 * The state of items in course sketch and how they are stored.
 */
message State {
    bool published = 1; // Instructor has finished construction of school item
    bool accessible = 2; // Has been made the school item available to be viewed and worked on
    bool pastDue = 3; // Due Date has passed. 'Late' if also not completed. 'Closed' if also no long accessible.
    bool started = 4; // Student has viewed or begun the school item
    bool completed = 5; // Student has saved/submitted work on all parts of school item
    bool graded = 6; // Instructor has finished grading the school item
}

/**
 * Specifies the type of item something is.
 *
 * NOTE: the names are used for the collection name for some databases.
 */
enum ItemType {
    COURSE = 0;
    ASSIGNMENT = 1;
    COURSE_PROBLEM = 2;
    BANK_PROBLEM = 3;
    SLIDE = 5;
}
