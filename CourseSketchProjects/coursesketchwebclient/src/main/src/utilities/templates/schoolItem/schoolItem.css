/* big box stuff */
.school_item {
	position: relative;
	text-align: left;
	padding: 5px 10px 5px 10px;
	display: flex;
	flex-direction: column;
	max-width:100%;
}

:host {
	text-align: left;
	position: relative;
	box-shadow: 0px 1px 1px #808080;
	margin-bottom: 5px;
	background: #eee;
	display: inline-flex;
	flex-direction: row;
	z-index: 1;
	/* in case we need to place other items behind it with a z-index*/
	max-height: 200px;
	max-width:100%;
	width:100%; /* by default but it can be changed */
}

:host[clickable] {
	cursor: pointer;
}

:host[clickable]:hover {
	background: #D4D4D4;
}

:host(.selectedBox) {
	background: #C4C4C4;
}

/* image displaying */
img {
	margin-right: 5px;
}

img.editable {
	cursor: url(/images/schoolItem/pencil_tilted_top_left_micro.png),
		pointer;
}

img:not([src]) {
	display: none;
}

img[src] ~ .school_item {
	max-width:75%;
}

/* title */
::content .name {
	display: inline-block;
}

.title {
	margin-bottom: .5em;
}
/* date */

.date h4 {
	display:inline;
	margin-right: .75em;
}

:host(:not([data-instructor])):not(.validDate) .date {
	display:none;
}

:host(.validDate) .date {
	display:block;
}

:host(:not([data-instructor])) .date ::content .accessDate::before, :host([data-instructor]) .accessDate::before {
    content: "Access Date: ";
    display: inline;
}

:host(:not([data-instructor])) .date ::content .dueDate::before, :host([data-instructor]) .dueDate::before {
    content: "Due Date: ";
    display: inline;
}

:host(:not([data-instructor])) .date ::content .closeDate::before, :host([data-instructor]) .closeDate::before {
	content: "Close Date: ";
	display: inline;
}

::content .accessDate, ::content .dueDate, ::content .closeDate {
	display: inline;
}

/* description */

.description .expandedContent {
	max-height:150px;
	overflow-y:scroll;
	overflow-x:hidden;
}

.description .contentHolder:not(.expandedContent) {
	max-height:150px;
	overflow:inherit;
}

p {
	margin:0px;
	
}

::content .expandedContent {
	max-width:100%;
	display:inline-block;
}

::content .description:not(.expandedContent) {
	max-width:100%;
	max-height:3.3em;
	overflow:hidden;
	text-overflow: ellipsis;
	display:inline-block;
}

::content .currentlyEditing:not(.expandedContent) {
	display:none;
}

/*overflow button */

p.expand {
	width: 100%;
	margin-left: -10px;
	margin-top: .2em;
	margin-bottom: -5px;
	padding-bottom: 10px;
	padding-right: 20px;
	-webkit-box-shadow: 0px -4px 3px rgba(50, 50, 50, 0.75);
	-moz-box-shadow: 0px -4px 3px rgba(50, 50, 50, 0.75);
	box-shadow: 0px -4px 3px rgba(50, 50, 50, 0.75);
	height: 10px;
	background-image: url(/images/menu/triangle_down_light.svg);
	background-repeat: no-repeat;
	background-position: center;
	cursor: pointer;
}

p.currentlyEditing + p {
	/* hide the button while editing regardless of its state. */
	display: none;
}

p:not(.overflow) + p {
	display: none;
}

p.contract {
	width: 100%;
	margin-left: -10px;
	margin-top: .2em;
	margin-bottom: -5px;
	padding-bottom: 0px;
	padding-right: 20px;
	-webkit-box-shadow: 0px -2px 2px rgba(50, 50, 50, 0.75);
	-moz-box-shadow: 0px -2px 2px rgba(50, 50, 50, 0.75);
	box-shadow: 0px -2px 2px rgba(50, 50, 50, 0.75);
	height: 10px;
	background-image: url(/images/menu/triangle_up_light.svg);
	background-repeat: no-repeat;
	background-position: center;
	cursor: pointer;
}

/* edit button */

:host(:not([data-instructor])) .editButton {
	display:none;
}

.editButton {
	position:relative;
	cursor: pointer;
	height: 100%;
	background-image: url(/images/schoolItem/pencil_tilted.svg);
	background-repeat: no-repeat;
	background-position: right top;
}

.editButton:after, .editButton:before  {
    content: "";
    display: block;
    height: 100%;
    width: 100%;
    opacity: 0;
    background-image: url(/images/schoolItem/pencil_tilted.svg);
	background-repeat: no-repeat;
	background-position: right top;

    top: 0;
    left: 0;
    position: absolute;
}

.editButton:hover:after, .editButton:hover:before {
    opacity: 1;
}

.editButton:not(:hover):after, .editButton:not(:hover):before {
	-moz-transition: all 1s;
    -webkit-transition: all 1s;
    transition: all 1s;
}

/* general content */
::content .currentlyEditing {
	display:none;
}

/* text color */

.good {
	color: #4FCB3C; /*#AAFAA6;*/
	text-shadow: 1px 1px 1px #98E58C; /*#3BA236;*/
}

.warning {
	color: #FFE600; /*#FFFDAA;*/
	text-shadow: 1px 1px 1px 1px /*#B8B056;*/ #E7BE06;
}

.bad {
	color: #EF4652; /*#FFA9AC;*/
	text-shadow: 1px 1px 1px #F7979E; /*#A6373A;*/
}

/* making margins 0 */
h3 {
	margin:0;
	color: #333;
	text-shadow: 0px -1px 1px #666;
}

h1,h4 {
	margin:0;
	color: #376C9F;
	text-shadow: 1px 1px 1px #699DCF;
}


/**
	States
*/
.schoolItemState {
	width: 25%;
	height: 3em;
	max-height:100%;
	position: absolute;
	background-repeat: no-repeat;
	background-position: right top;
	top: 0px;
	right: 0px;
	z-index: -1;
}

/* grades */

:host([data-state="graded"]) .schoolItemState {
	width: initial;
}

:host(:not([data-state="graded"])) ::content .grade {
	display:none;
}

:host([data-state="graded"]):not([data-instructor]) .accessDate {
	display:none;
}

:host([data-state="graded"]):not([data-instructor]) .dueDate {
	display:none;
}

:host([data-state="graded"]):not([data-instructor]) .closeDate {
	display:none;
}


/* not open */

:host([data-state="notOpen"]) .schoolItemState {
	background-image: url(/images/schoolItem/coming_soon.svg);
}

:host([data-state="notOpen"]:not([data-instructor])) .closeDate {
	display:none;
}
/* in progress */

:host([data-state="inProgress"]) .schoolItemState {
	width: 40%;
	background-image: url(/images/schoolItem/construction_corner.svg);
}

:host([data-state="inProgress"]:not([data-instructor])) .accessDate {
	display:none;
}

/* closed */

:host([data-state="closed"]) .schoolItemState {
	background-image: url(/images/schoolItem/closed_sign.svg);
	width: 20%;
}

:host([data-state="closed"]:not([data-instructor])) .accessDate {
	display:none;
}

:host([data-state="closed"]:not([data-instructor])) .dueDate {
	display:none;
}

/* completed */

:host([data-state="completed"]) .schoolItemState {
	background-image: url(/images/schoolItem/fancy_checkered_flag.svg);
}

:host([data-state="inProgress"]:not([data-instructor])) .accessDate {
	display:none;
}