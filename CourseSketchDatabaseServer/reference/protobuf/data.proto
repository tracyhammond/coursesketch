package protobuf.srl.query;

message DataRequest {
	repeated ItemRequest items = 3;
}

message ItemRequest {
	optional ItemQuery query = 1;
	repeated string itemId = 2; // to pull multiple of the same item
	optional bytes advanceQuery = 3;
}

/**
 * Used when sending/updating results.
 */
message DataSend {
	repeated ItemSend items = 3;
}

message ItemSend {
	optional ItemQuery query = 1;
	optional bytes data = 3;
}

/**
 * Returned upon any request/send from the database.
 */
message DataResult {
	repeated ItemResult results = 1;
}

message ItemResult {
	optional ItemQuery query = 1;
	optional string returnText = 2;
	optional bytes data = 3;
	optional bool noData = 4; // if there is no data to return then this flag is set to true.
	optional string errorMessage = 5; // if noData is true then this may contain why.
}

enum ItemQuery {
	ERROR = -1;
	COURSE = 0;
	ASSIGNMENT = 1;
	COURSE_PROBLEM = 2;
	BANK_PROBLEM = 3;
	USERGROUP = 4;
	CLASS_GRADE = 5;
	USER_INFO = 6;
	SOLUTION = 7;
	EXPERIMENT = 8;
	SCHOOL = 9; // used to get the list of courses for a specific user, returns text if there are no courses.
	COURSE_SEARCH = 10;
	BANK_SEARCH = 11;
	REGISTER = 12; // userId = 0 courseId = 1
	COURSE_LIST = 13; // returns a list of Ids
}

/**
 * Used for when we want to return a list of Ids
 */
message IdList {
	repeated string list = 1;
}